package com.example.entity;

import java.util.ArrayList;
import java.util.List;

import com.example.inf.IExample;

public class TaskExample{
	int limit;
	int offset;
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public TaskExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	public void list(int offset,int limit){
		this.limit = limit;
		this.offset = offset;
	}
	
	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andTaskNameIsNull() {
			addCriterion("TASK_NAME is null");
			return (Criteria) this;
		}

		public Criteria andTaskNameIsNotNull() {
			addCriterion("TASK_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andTaskNameEqualTo(String value) {
			addCriterion("TASK_NAME =", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotEqualTo(String value) {
			addCriterion("TASK_NAME <>", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameGreaterThan(String value) {
			addCriterion("TASK_NAME >", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameGreaterThanOrEqualTo(String value) {
			addCriterion("TASK_NAME >=", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameLessThan(String value) {
			addCriterion("TASK_NAME <", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameLessThanOrEqualTo(String value) {
			addCriterion("TASK_NAME <=", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameLike(String value) {
			addCriterion("TASK_NAME like", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotLike(String value) {
			addCriterion("TASK_NAME not like", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameIn(List<String> values) {
			addCriterion("TASK_NAME in", values, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotIn(List<String> values) {
			addCriterion("TASK_NAME not in", values, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameBetween(String value1, String value2) {
			addCriterion("TASK_NAME between", value1, value2, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotBetween(String value1, String value2) {
			addCriterion("TASK_NAME not between", value1, value2, "taskName");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdIsNull() {
			addCriterion("PARENT_TASK_ID is null");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdIsNotNull() {
			addCriterion("PARENT_TASK_ID is not null");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdEqualTo(String value) {
			addCriterion("PARENT_TASK_ID =", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdNotEqualTo(String value) {
			addCriterion("PARENT_TASK_ID <>", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdGreaterThan(String value) {
			addCriterion("PARENT_TASK_ID >", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdGreaterThanOrEqualTo(String value) {
			addCriterion("PARENT_TASK_ID >=", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdLessThan(String value) {
			addCriterion("PARENT_TASK_ID <", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdLessThanOrEqualTo(String value) {
			addCriterion("PARENT_TASK_ID <=", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdLike(String value) {
			addCriterion("PARENT_TASK_ID like", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdNotLike(String value) {
			addCriterion("PARENT_TASK_ID not like", value, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdIn(List<String> values) {
			addCriterion("PARENT_TASK_ID in", values, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdNotIn(List<String> values) {
			addCriterion("PARENT_TASK_ID not in", values, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdBetween(String value1, String value2) {
			addCriterion("PARENT_TASK_ID between", value1, value2, "parentTaskId");
			return (Criteria) this;
		}

		public Criteria andParentTaskIdNotBetween(String value1, String value2) {
			addCriterion("PARENT_TASK_ID not between", value1, value2, "parentTaskId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table task
	 * @mbggenerated  Sat Apr 09 14:28:32 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 09 13:58:18 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

	public int getLimit() {
		return limit;
	}

	public void setLimit(int limit) {
		this.limit = limit;
	}

	public int getOffset() {
		return offset;
	}

	public void setOffset(int offset) {
		this.offset = offset;
	}
}